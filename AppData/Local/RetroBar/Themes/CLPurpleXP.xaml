<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="ButtonInnerHighlight" Color="Transparent" />
    <SolidColorBrush x:Key="ButtonShadow" Color="#232323" />
    <SolidColorBrush x:Key="ButtonBorder" Color="#444444" />
    <SolidColorBrush x:Key="ButtonLight" Color="#444444" />
    <SolidColorBrush x:Key="ButtonFace" Color="#1d0a5c" />

    <SolidColorBrush x:Key="ButtonInactiveBorder" Color="transparent" />
    <SolidColorBrush x:Key="ButtonActiveBorder" Color="#2e2c30" />
    <SolidColorBrush x:Key="ButtonActiveBackground" Color="#2e2c30" />
    <SolidColorBrush x:Key="ButtonHoverBorder" Color="#291d8c" />
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="#3e0eb5" />
    <SolidColorBrush x:Key="ButtonPressedBorder" Color="#444444" />
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="#291d8c" />
    <SolidColorBrush x:Key="ButtonFlashingBorder" Color="#ff725d" />
    <SolidColorBrush x:Key="ButtonFlashingBackground" Color="#ff856e" />

    <SolidColorBrush x:Key="TrayBorder" Color="#262626" />
    <SolidColorBrush x:Key="TrayInnerBorder" Color="#616161" />
    <SolidColorBrush x:Key="TrayBackground" Color="#1d0a5c" />

    <SolidColorBrush x:Key="StartButtonBackground" Color="#1d0a5c" />
    <SolidColorBrush x:Key="StartButtonHoverBorder" Color="#291d8c" />
    <SolidColorBrush x:Key="StartButtonHoverBorderLight" Color="#222222" />
    <SolidColorBrush x:Key="StartButtonHoverBorderShadow" Color="#aaaaaa" />
    <SolidColorBrush x:Key="StartButtonHoverBackground" Color="#3e0eb5" />
    <SolidColorBrush x:Key="StartButtonPressedBorder" Color="#999999" />
    <SolidColorBrush x:Key="StartButtonPressedBorderLight" Color="#aaaaaa" />
    <SolidColorBrush x:Key="StartButtonPressedBorderShadow" Color="#222222" />
    <SolidColorBrush x:Key="StartButtonPressedBackground"  Color="#291d8c" />

    <SolidColorBrush x:Key="ButtonForeground" Color="#d9d9d9" />
    <SolidColorBrush x:Key="ButtonPressedForeground" Color="#ffffff" />
    <SolidColorBrush x:Key="ClockForeground" Color="#d9d9d9" />

    <SolidColorBrush x:Key="InputLanguageForeground" Color="#d9d9d9" />
    <SolidColorBrush x:Key="InputLanguageBackground" Color="#444444" />

    <SolidColorBrush x:Key="ToolTipBackground" Color="#2b2b2b" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="#d9d9d9" />
    <FontWeight x:Key="SetTimeMenuItemWeight">Normal</FontWeight>

    <BitmapImage x:Key="StartIconImage" UriSource="../Resources/startflat4.png" />
    <BitmapImage x:Key="ShowDesktopIconImageSmall" UriSource="../Resources/desktopxp-sm.png" />
    <BitmapImage x:Key="ShowDesktopIconImageLarge" UriSource="../Resources/desktopxp-lg.png" />

    <Style TargetType="Image" x:Key="StartIcon"
           BasedOn="{StaticResource StartIcon}">
        <Setter Property="Width"
                Value="30" />
        <Setter Property="Height"
                Value="39" />
        <Setter Property="Margin"
                Value="0" />
    </Style>
    
    <Style TargetType="TextBlock" x:Key="StartLabel"
           BasedOn="{StaticResource StartLabel}">
        <Setter Property="Text"
                Value="" />
        <Setter Property="Width"
                Value="0" />
        <Setter Property="Height"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
    </Style>

    <Style TargetType="MenuItem" x:Key="TaskManMenuItem">
        <Setter Property="Header"
                Value="{DynamicResource show_taskman}" />
    </Style>



    <Style TargetType="ItemsControl" x:Key="ToolbarItems"
           BasedOn="{StaticResource ToolbarItems}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsLocked, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               Value="Vertical" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="2,4,2,2" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Thumb" x:Key="ToolbarThumb"
           BasedOn="{StaticResource ToolbarThumb}">
        <Setter Property="Margin"
                Value="4,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border BorderThickness="0,0,1,1"
                            BorderBrush="{DynamicResource ButtonShadow}"
                            HorizontalAlignment="Left"
                            Margin="2,2,0,2"
                            x:Name="OuterNub"
                            SnapsToDevicePixels="True"
                            Width="3">
                        <Border BorderThickness="1,1,0,0"
                                BorderBrush="{DynamicResource ButtonHighlight}">

                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="OuterNub"
                                        Property="Margin"
                                        Value="2,2,2,0" />
                                <Setter TargetName="OuterNub"
                                        Property="Height"
                                        Value="3" />
                                <Setter TargetName="OuterNub"
                                        Property="HorizontalAlignment"
                                        Value="Stretch" />
                                <Setter TargetName="OuterNub"
                                        Property="Width"
                                        Value="Auto" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <Setter Property="Margin"
                        Value="2,2,2,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StartButton"
           BasedOn="{StaticResource StartButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent"
                            Padding="6">
                        <Border BorderThickness="0"
                                BorderBrush="{DynamicResource ButtonBorder}"
                                x:Name="ButtonBorder">
                            <Border BorderThickness="0,0,0,0"
                                    BorderBrush="{DynamicResource ButtonLight}"
                                    x:Name="TopLeftBorder">
                                <Border BorderThickness="0,0,0,0"
                                        BorderBrush="{DynamicResource ButtonShadow}"
                                        Background="{DynamicResource StartButtonBackground}"
                                        x:Name="BottomRightBorder">
                                    <ContentPresenter Margin="2,1"
                                                      x:Name="Content" />
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonHoverBorder}" />
                            <Setter TargetName="TopLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonHoverBorderLight}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonHoverBorderShadow}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource StartButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorder}" />
                            <Setter TargetName="TopLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderShadow}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderLight}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource StartButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorder}" />
                            <Setter TargetName="TopLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderShadow}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderLight}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource StartButtonPressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ContentControl" x:Key="Taskbar"
           BasedOn="{StaticResource Taskbar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="0,0,0,0"
                            BorderBrush="{DynamicResource ButtonBorder}"
                            Name="OuterBorder">
                        <Border BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource ButtonLight}"
                                Background="{DynamicResource ButtonFace}"
                                Name="InnerBorder">
                            <ContentPresenter />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Left">
                            <DataTrigger.Setters>
                                <Setter TargetName="OuterBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                                <Setter TargetName="InnerBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Right">
                            <DataTrigger.Setters>
                                <Setter TargetName="OuterBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                                <Setter TargetName="InnerBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Top">
                            <DataTrigger.Setters>
                                <Setter TargetName="OuterBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                                <Setter TargetName="InnerBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox" x:Key="Tray">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderThickness="0"
                            BorderBrush="{DynamicResource TrayBorder}"
                            Margin="1">
                        <Border BorderThickness="0,0,0,0"
                                BorderBrush="{DynamicResource TrayInnerBorder}"
                                Background="{DynamicResource TrayBackground}"
                                Padding="2,2,2,2">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="TaskButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource ButtonFace}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Margin"
                Value="0,0,3,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,2"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="1.5"
                                BorderBrush="{DynamicResource ButtonInactiveBorder}"
                                Background="{TemplateBinding Background}"
				CornerRadius="5"
                                x:Name="ButtonBorder">
                            <ContentPresenter Margin="4,2"
                                              x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonOuterBorder"
                                        Property="Padding"
                                        Value="2,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonHoverBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonPressedBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="4,3,2,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="TaskButtonActive"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Background"
                Value="{DynamicResource ButtonActiveBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,2"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="1.5"
                            BorderBrush="{DynamicResource ButtonActiveBorder}"
                            Background="{TemplateBinding Background}"
			CornerRadius="5"
                            x:Name="ButtonBorder">
                            <ContentPresenter Margin="4,3,2,1"
                                          x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonOuterBorder"
                                        Property="Padding"
                                        Value="2,3" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonHoverBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonPressedBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="TaskButtonFlashing"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Background"
                Value="{DynamicResource ButtonFlashingBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0,2"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="1.5"
                            BorderBrush="{DynamicResource ButtonFlashingBorder}"
                            Background="{TemplateBinding Background}"
			CornerRadius="5"
                            x:Name="ButtonBorder">
                            <ContentPresenter Margin="3,2"
                                          x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonOuterBorder"
                                        Property="Padding"
                                        Value="2,1" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="4,3,2,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ContentControl" x:Key="TaskButtonThumbnail">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource ToolTipForeground}"
                            Background="{DynamicResource ToolTipBackground}"
                            Padding="4"
                            Margin="4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>